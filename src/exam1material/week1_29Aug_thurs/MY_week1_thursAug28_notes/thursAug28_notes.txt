HW 0 - due today (what to submit?)

    link format



HW 1 - due Tuesday, September 2
    be sure to explain your reasoning when asked
    on logic puzzles, should be clear why your answer is the only  
        one


////////////////////////////////////////////////////////

- where to find examples from class

- how to clone lecture notes repo

- weekly review quizzes

- what to do before/after each class

/////////////////////////////////////////////////////////

Today:

- More with logical reasoning and puzzles
- Begin logic gates and truth tables
- Evaluating logical statements


/////////////////////////////////////////////////////////

All ints.

if (x < 3 || y > 4) {
    statements1;
}
else if (x < 5 && y == 7) {
    statements2;
}
else {
    statements3;
}

--> when is the first (if) condition false?
    x >= 3 && y <= 44

--> is it possible for "statements2" to execute?7
No, because the if condition must be true for the else if statement to be true.
The else if won't even be evaluated if the first if evaluates to true



////////////////////////////////////////////////////////

More with knights and knaves.

knights: each full statement that they make is true
knave: each full statement must be false




You meet three inhabitants: Sarah, Bill and Mae.

Sarah tells you that only a knave would say that Bill is a knave.
    - Sarah: Bill is a knight
Bill claims that it's false that Mae is a knave.
    - Bill: Mae is a knight
Mae tells you, "Bill would tell you that I am a knave."
    - 

What types are Sarah, Bill, and Mae?


(How might we simplify everything?)

Suppose Sarah is a knight. Bill would have to be a knight, and from his statement Mae would have to be a knight.
    Mae's statement would be a lie which is impossible
Suppose instead Sarah is a knave. By their statements, Bill would have to be a knave, and Mae would have to be a knave.
    Mae's statement works since Bill would say a lie and say she's a knight, however she said he would call her a knave


////////////////////////////////////

Lion always lies on Mondays, Tuesdays, and Wednesdays.
Lion always tells the truth on other days.
Unicorn always lies on Thursdays, Fridays, and Saturdays,
    and always tells the truth on other days.

On Sunday, everyone tells the truth.

Lion says: "Yesterday was one of my lying days."
Unicorn says: "Yesterday was one of my lying days, too."

What day is it?

Sunday? No, Lion couldn't say that.
Tuesday/Friday/Wednesday/Saturday? No, neither could say that.
    Whoever is lying lied the day before but should still be lying about it.
Monday? No, Unicorn couldn't say that.
Thursday? yes

////////////////////////////////

Tweedledee and Tweedledum are identical.
You know that one of them lies Mon/Tues/Wed,
and that the other lies Thurs/Fri/Sat.
(They tell the truth on non-lying days.)

(So they both tell the truth on Sunday.)

You don't know which is which.

You see both of them together.
The first one says: "I'm Tweedledum." 
The second one says: "I'm Tweedledee."

Which is which? What day is it?

Any day but Sunday, one lies and one tells the truth. Would both give smae name.

Must be Sunday, since they say differnet things, both are telling the truth






//////////////////////////////////

In-class quiz





//////////////////////////////////

You know that either Tweedledum or Tweedledee has
    lost a rattle.
You find it, and want to return it to the correct one.
You don't know what day it is, but are sure that it isn’t
    Sunday.


(we know one is lying, one is telling truth)

The first one says: "Tweedledee owns the rattle."
The second one says: "I'm Tweedledee!"

Who gets the rattle? The first twin

Suppose the first twin is telling the truth. Then Tweedledee owns the rattle. The second twin would be lying, and must be Tweedledum. Then Tweedledee would
be the first twin. We should give the rattle to the first twin

Suppose first twin is lying. Tweedledum owns the rattle. The second twin is telling the truth, and must be Tweedledee. Then Tweedledee dumb must be the first twin
and we must give the rattle to the first twin

Who is who?
Not enough information to tell

///////////////////////////////////////////

(Do for practice)

Based on Shakespeare's "Merchant of Venice".

There are three caskets – one gold, one silver,
    and one lead.
Exactly one of the caskets contains a portrait.
Each casket has a message on it, and you know that at most
    one of the messages is true.

Gold casket: "The portrait is in this casket."
Silver casket: "The portrait is not in this casket."
Lead casket: "The portrait is not in the gold casket."

Where is the portrait?






///////////////////////////////////

Cheryl's birthday problem.

Written for Singapore and Asian Schools Math Olympiad in 2015

Albert and Bernard want to know when Cheryl's birthday is.
Cheryl gives them 10 potential dates:

May 15, May 16, May 19
June 17, June 18
July 14, July 16
August 14, August 15, August 17

Cheryl privately tells Albert her birthday month.
    (May, June, July, or August)

Cheryl privately tells Bernard her birthday day (number).
    (14-19)


Albert says: "I don't know when Cheryl's birthday is,
    but I know Bernard doesn't know too."

Cannot be May, or June because they have unique numbers(days) and Albert is sure Bernard doesn't know the date

Bernard says: "At first I didn't know when Cheryl's
    birthday is, but now I do."

Cannot be 14th, because Bernard couldn't know the date if it was as 14 was on July and August


Albert says: "Then I also know when Cheryl's birthday is."

It must be July 16th as because Albert can only be certain if the month he was given was July because there'd only be one date left July 16th


When is it?

Her birthday is July 16th


///////////////////////////////////

Start truth tables and logic gates.

    have boolean variables
    want to express statements like: p AND (q OR r)

Variables can be true or false

Basic operations:

∧   and (&&)
∨   or (inclusive or ||)
¬   not (!)
→   implies (if/then ->)


Basic logic gates (draw on board)


gates still used to design circuits


why do we care about equivalent circuits?


what about programming?

///////////////////////////////////////////////////

Fill in basic operations:


AND:

p q  #  p ∧ q
--------------
T T  #    T
T F  #    F
F T  #    F
F F  #    F


OR:

p q  #  p ∨ q
--------------
T T  #    T
T F  #    T
F T  #    T
F F  #    F


NOT:

p  # ¬p
--------
T  #  F
F  #  T

////////////////////////////////////////////////

IMPLIES operator →

"If I have a test, then I will study"

p: I have a test
q: I will study

p → q

It is false if we have BROKEN A PROMISE.
Otherwise we have not.

p q  #  p → q
--------------
T T  #    T
T F  #    F  
F T  #    T - Vacuasly true
F F  #    T - Vacuasly true

/////////////////////////////////////////

How does the implies operator relate to programming?

if, conditional statemnets

//////////////////////////////////////////

Design circuits for:

¬(p ∨ q)       (p NOR q)


p XOR q (with just the gates we've seen, not a specific XOR gate)



/////////////////////////////////////

How would we evaluate the output of these circuits with
different inputs?



Graphically build circuits:

https://logic.ly/demo/


//////////////////////////////////////

Evaluating logical statements.

Basic operations:

∧ - AND
∨ - OR (inclusive or)
¬ - NOT
→ - IMPLIES

////////////////////////////////////////

Consider ¬p ∨ q ∧ r.

--> what operation do we do first?



Order of operations

In math?




For logic statements:

From highest (happens first) to lowest (happens last) precedence:


////////////////////////////////////////////////

Given this statement:

    ¬p ∨ q ∧ r

Add () to show the order of operations.




Evaluate the above statement using these
variable assignments:

p is T
q is F
r is F



///////////////////////////////////////////

Next:
- more with order of operations
- bigger truth tables
- parse trees
- begin propositional logic